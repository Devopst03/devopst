---
# File path     : /home/prod/talos/src/playbooks/services.yml
# Description   : Main service_action playbook used against two generic host groups that are generated by inventory management.
# Parameters    : Mandatory parameter is product name and env name. Optional parameter are host name and service

  - hosts: group1
    any_errors_fatal: True
    user: "{{ INSTALL_USER }}"

    vars_files:
        - group_vars/deploy

    vars:
       current_service: "{{ product }}-{{ service }}"

    roles:

        - { role: db, action: start }
        - { role: nagios, downtime: set, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: out, when: service_action != 'status', tags: [ 'deploy', 'haproxy', 'restart_services' ] }
        - { role: "{{ service_action }}" }
        - { role: nagios, downtime: remove, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: in, when: env == 'production', tags: [ 'deploy', 'haproxy', 'restart_services' ]  }
        - { role: db, action: finish }


  - hosts: group2
    any_errors_fatal: True
    user: "{{ INSTALL_USER }}"

    vars_files:
        - group_vars/deploy

    vars:
       current_service: "{{ product }}-{{ service }}"

    roles:
        - { role: db, action: start }
        - { role: nagios, downtime: set, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: out, when: env == 'production', tags: [ 'deploy', 'haproxy', 'restart_services' ] }
        - { role: "{{ service_action }}" }
        - { role: nagios, downtime: remove, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: in, when: env == 'production', tags: [ 'deploy', 'haproxy', 'restart_services' ]  }
        - { role: db, action: finish }
