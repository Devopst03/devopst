---
# File path     : /home/prod/talos/src/playbooks/deploy.yml
# Description   : Main deploy playbook used against two generic host groups that are generated by inventory management.
#                 The parameters below are required, deploy role assumes that they are global vars.
# Parameters    : product, service, env, build_name (build version name) must be passed as params though command line

  - hosts: group1
    any_errors_fatal: True
    user: "{{ INSTALL_USER }}"

    vars_files:
        - group_vars/deploy


    vars:
       # Easier to reference service names when starting and stopping product's service
       # We name service start scripts in the following format: productname-productname format, ex: studio-studio
       main_service: "{{ product }}-{{ product }}"
       current_service: "{{ product }}-{{ service }}"

    roles:

        - { role: db, action: start }
        - { role: nagios, downtime: set, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: out, when: env == 'production', tags: [ 'deploy', 'haproxy', 'restart_services' ] }
        - { role: install_build, tags: [ 'install' ] }
        - { role: deploy_build, tags: [ 'deploy' ] }
        - { role: nagios, downtime: remove, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: in, when: env == 'production', tags: [ 'deploy', 'haproxy', 'restart_services' ]  }
        - { role: db, action: finish }


  - hosts: group2
    any_errors_fatal: True
    user: "{{ INSTALL_USER }}"

    vars_files:
        - group_vars/deploy

    vars:
       main_service: "{{ product }}-{{ product }}"
       current_service: "{{ product }}-{{ service }}"

    roles:
        - { role: db, action: start }
        - { role: nagios, downtime: set, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: out, when: env == 'production', tags: [ 'deploy', 'haproxy', 'restart_services' ] }
        - { role: install_build, tags: [ 'install' ] }
        - { role: deploy_build, tags: [ 'deploy' ] }
        - { role: nagios, downtime: remove, when: env == 'production', tags: [ 'deploy', 'alerts', 'restart_services' ]  }
        - { role: haproxy, rotation_status: in, when: env == 'production', tags: [ 'deploy', 'haproxy', 'restart_services' ]  }
        - { role: db, action: finish }
